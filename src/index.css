@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Softer Cyber Gaming Theme */
    --background: 0 0% 6%;
    --foreground: 0 0% 95%;

    --card: 0 0% 8%;
    --card-foreground: 0 0% 92%;

    --popover: 0 0% 8%;
    --popover-foreground: 0 0% 92%;

    /* Muted Purple Primary */
    --primary: 250 60% 35%;
    --primary-foreground: 0 0% 98%;
    --primary-glow: 250 50% 45%;

    /* Soft Teal Accent */
    --secondary: 180 60% 40%;
    --secondary-foreground: 0 0% 15%;

    --muted: 0 0% 14%;
    --muted-foreground: 0 0% 65%;

    --accent: 180 60% 40%;
    --accent-foreground: 0 0% 15%;

    --destructive: 0 70% 50%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 18%;
    --input: 0 0% 12%;
    --ring: 250 50% 45%;

    --radius: 0.75rem;

    /* Softer Gradients */
    --gradient-hero: linear-gradient(135deg, hsl(250 40% 10%), hsl(240 50% 12%), hsl(250 30% 8%));
    --gradient-card: linear-gradient(145deg, hsl(0 0% 8%), hsl(240 15% 10%));
    --gradient-accent: linear-gradient(135deg, hsl(180 60% 40%), hsl(250 60% 35%));
    
    /* Softer Effects */
    --shadow-glow: 0 0 30px hsla(250, 50%, 45%, 0.25);
    --shadow-card: 0 10px 30px -10px hsla(0, 0%, 0%, 0.4);
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    /* Same as light theme - we're using dark by default */
    --background: 0 0% 6%;
    --foreground: 0 0% 95%;
    --card: 0 0% 8%;
    --card-foreground: 0 0% 92%;
    --popover: 0 0% 8%;
    --popover-foreground: 0 0% 92%;
    --primary: 250 60% 35%;
    --primary-foreground: 0 0% 98%;
    --secondary: 180 60% 40%;
    --secondary-foreground: 0 0% 15%;
    --muted: 0 0% 14%;
    --muted-foreground: 0 0% 65%;
    --accent: 180 60% 40%;
    --accent-foreground: 0 0% 15%;
    --destructive: 0 70% 50%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 18%;
    --input: 0 0% 12%;
    --ring: 250 50% 45%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    background: var(--gradient-hero);
    min-height: 100vh;
  }

  html {
    scroll-behavior: smooth;
  }
}

@layer components {
  .hero-gradient {
    background: var(--gradient-hero);
  }
  
  .card-gradient {
    background: var(--gradient-card);
  }
  
  .accent-gradient {
    background: var(--gradient-accent);
  }
  
  .glow-effect {
    box-shadow: var(--shadow-glow);
  }
  
  .card-shadow {
    box-shadow: var(--shadow-card);
  }
  
  .smooth-transition {
    transition: var(--transition-smooth);
  }
  
  .gaming-border {
    border: 1px solid hsl(var(--border));
    background: linear-gradient(135deg, 
      hsl(var(--card)), 
      hsl(0 0% 10%)
    );
  }

  .background-pattern {
    position: relative;
    overflow: hidden;
  }

  .background-pattern::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      radial-gradient(circle at 25% 25%, hsl(var(--primary-glow) / 0.1) 0%, transparent 50%),
      radial-gradient(circle at 75% 75%, hsl(var(--accent) / 0.08) 0%, transparent 50%),
      radial-gradient(circle at 50% 50%, hsl(var(--primary) / 0.05) 0%, transparent 70%);
    pointer-events: none;
  }

  .background-dots {
    background-image: radial-gradient(circle at 1px 1px, hsl(var(--muted-foreground) / 0.15) 1px, transparent 0);
    background-size: 20px 20px;
  }

  .background-grid {
    background-image: 
      linear-gradient(hsl(var(--border) / 0.3) 1px, transparent 1px),
      linear-gradient(90deg, hsl(var(--border) / 0.3) 1px, transparent 1px);
    background-size: 50px 50px;
  }

  .game-card {
    position: relative;
    background: linear-gradient(145deg, hsl(var(--card)), hsl(240 20% 12%));
    border: 1px solid hsl(var(--border));
    overflow: hidden;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }

  .game-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 2px;
    background: var(--gradient-accent);
    transition: left 0.5s ease;
  }

  .game-card:hover::before {
    left: 0;
  }

  .game-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 
      0 20px 40px -10px hsla(0, 0%, 0%, 0.3),
      0 0 30px hsla(var(--primary-glow) / 0.3),
      inset 0 1px 0 hsla(255, 255%, 255%, 0.1);
  }

  .game-image {
    position: relative;
    overflow: hidden;
  }

  .game-image::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 60px 60px 0 0;
    border-color: hsl(var(--primary-glow) / 0.2) transparent transparent transparent;
    transition: all 0.3s ease;
  }

  .game-card:hover .game-image::after {
    border-width: 80px 80px 0 0;
    border-color: hsl(var(--primary-glow) / 0.4) transparent transparent transparent;
  }

  .game-badge {
    background: linear-gradient(135deg, hsl(var(--accent)), hsl(var(--primary)));
    border: none;
    color: hsl(var(--background));
    font-weight: 600;
    text-shadow: 0 1px 2px hsla(0, 0%, 0%, 0.5);
    position: relative;
    overflow: hidden;
  }

  .game-badge::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, hsla(255, 255%, 255%, 0.3), transparent);
    transition: left 0.6s ease;
  }

  .game-card:hover .game-badge::before {
    left: 100%;
  }

  .feature-list {
    position: relative;
  }

  .feature-item {
    position: relative;
    padding-left: 20px;
    opacity: 0;
    transform: translateX(-10px);
    animation: slide-in 0.3s ease forwards;
  }

  .feature-item:nth-child(1) { animation-delay: 0.1s; }
  .feature-item:nth-child(2) { animation-delay: 0.2s; }
  .feature-item:nth-child(3) { animation-delay: 0.3s; }
  .feature-item:nth-child(4) { animation-delay: 0.4s; }

  .feature-icon {
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    color: hsl(var(--accent));
    filter: drop-shadow(0 0 4px hsla(var(--accent) / 0.5));
  }

  .demo-button {
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--accent)));
    border: 1px solid hsl(var(--primary-glow) / 0.5);
    color: hsl(var(--background));
    position: relative;
    overflow: hidden;
    font-weight: 600;
    animation: demo-pulse 8s ease-in-out infinite;
  }

  .demo-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 100%;
    background: hsla(255, 255%, 255%, 0.2);
    transition: width 0.3s ease;
  }

  .demo-button:hover::before {
    width: 100%;
  }

  .demo-button::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: inherit;
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--accent)));
    opacity: 0;
    z-index: -1;
    filter: blur(8px);
    animation: demo-glow 8s ease-in-out infinite;
  }

  @keyframes demo-pulse {
    0%, 100% {
      box-shadow: 
        0 4px 20px hsla(var(--primary) / 0.2),
        0 0 15px hsla(var(--accent) / 0.15);
      transform: scale(1);
    }
    50% {
      box-shadow: 
        0 5px 22px hsla(var(--primary) / 0.25),
        0 0 20px hsla(var(--accent) / 0.2);
      transform: scale(1.02);
    }
  }

  @keyframes demo-glow {
    0%, 100% {
      opacity: 0;
    }
    50% {
      opacity: 0.15;
    }
  }

  .coming-soon-badge {
    background: linear-gradient(135deg, hsl(var(--muted)), hsl(240 15% 20%));
    border: 1px solid hsl(var(--border));
    color: hsl(var(--muted-foreground));
    position: relative;
  }

  .coming-soon-badge::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 1px;
    background: linear-gradient(90deg, transparent, hsl(var(--muted-foreground) / 0.5), transparent);
    animation: shimmer 2s infinite;
  }

  @keyframes shimmer {
    0% { left: -100%; }
    100% { left: 100%; }
  }
}